<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Creams STAGING Somke Performance Testing" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="DomainURL" elementType="Argument">
            <stringProp name="Argument.name">DomainURL</stringProp>
            <stringProp name="Argument.value">staging-api.creams.io/web</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PortNumber" elementType="Argument">
            <stringProp name="Argument.name">PortNumber</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Token" elementType="Argument">
            <stringProp name="Argument.name">Token</stringProp>
            <stringProp name="Argument.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJzb3ViYW50ZXN0QGNyZWFtcy5pbyIsInNjb3BlIjpbIkNyZWFtcy1XaGF0RnVja0NvZGVDYW5JR2l2ZUhlcmU_Il0sImV4cCI6MTUzMzkwODAwOSwidXNlciI6eyJ1c2VySWQiOjU1LCJlbWFpbCI6InNvdWJhbnRlc3RAY3JlYW1zLmlvIiwiY3VzdG9tZXJJZCI6NSwidXNlck5hbWUiOiLmkJzlip7kuLvluJDlj7ciLCJ1c2VyVGVsIjoiMTgyNTgxMjE4ODEiLCJyb2xlcyI6WyJDVVNUT01FUl9NQVNURVIiXSwidGVsVmVyaWZpZWQiOnRydWUsInBhc3N3b3JkUmVzZXQiOnRydWUsInBlcm1pc3Npb25zIjpbIlJPT01fRURJVCIsIk1BUktFVElOR19TWU5DIiwiQ09OVFJBQ1RfRklOQU5DRSIsIkNPTlRSQUNUX0FQUFJPVkFMIiwiTUFSS0VUSU5HIiwiREVGQVVMVF9SRU5UX1BSSUNFIiwiQlVJTERJTkdfRURJVCIsIlBST1BFUlRZX0NPTlRSQUNUIiwiQ09OVFJBQ1RfTU9ESUZZIiwiQ0hBTk5FTF9DT05UQUNUIiwiQ09OVFJBQ1QiLCJERU1BTkRfSEFMTCIsIkZJTkFOQ0UiLCJGSU5BTkNFX01PRElGWSIsIkNPTlRSQUNUX1JFUE9SVF9FWFBPUlQiLCJNRVRFUl9CSUxMX0NSRUFURSIsIk1FVEVSX1JFQURJTkciLCJNQVJLRVRJTkdfU1RBVElTVElDUyIsIlBST1BFUlRZIiwiTUVURVJfTU9ESUZZIiwiVVNFUl9NQU5BR0VSIiwiRklOQU5DRV9BUFBST1ZBTCIsIkNPTlRSQUNUX1RFTVBMQVRFIl0sImJ1aWxkaW5nSWRMaXN0IjpbNTE2LDc3OSwxNywxOCw2NTgsMjAsMjEsMjIsMjMsMjQsMjYsMjcsMjgsMjksNzk5LDMyLDE2MCwxNjEsMTYyLDE2MywxNjQsMTY1LDE2NiwxNjcsMTY4LDgwOCwxNjksODA5LDE3MCw4MTAsMTcxLDgxMSwxNzIsODEyLDE3Myw4MTMsMTc0LDgxNCwxNzUsODE1LDE3Niw4MTYsMTc3LDgxNywxNzgsODE4LDE3OSw4MTksMTgwLDgyMCwxODEsODIxLDgyMiwxODMsMTg0LDgyNCw4MjUsODI2LDgyNyw4MjgsODI5LDgzMyw4MzQsODM1LDgzNyw4MzksODQwLDg0MSw4NDIsODQzLDg0NCw4NDUsODQ2LDg0OCw4NDksODUwLDg1MSw4NTIsNDcwLDg1Niw4NTcsODYzLDg2Niw4NjcsODY5LDg3NCw0OTMsODc4LDg3OSw4ODAsODgyXSwiZGF0YUFjY2Vzc0xldmVsIjp7IkNMSUVOVCI6IkFMTCIsIkNPTlRSQUNUIjoiQUxMIn0sImFkbWluIjp0cnVlLCJkYXRhQXV0aExpc3QiOltdfSwiYXV0aG9yaXRpZXMiOlsiQ09OVFJBQ1RfQVBQUk9WQUwiLCJDT05UUkFDVF9SRVBPUlRfRVhQT1JUIiwiQ09OVFJBQ1RfQUxMIiwiQ09OVFJBQ1QiLCJDT05UUkFDVF9NT0RJRlkiLCJNRVRFUl9CSUxMX0NSRUFURSIsIkNPTlRSQUNUX0ZJTkFOQ0UiLCJGSU5BTkNFIiwiUk9PTV9FRElUIiwiTUVURVJfUkVBRElORyIsIlBST1BFUlRZX0NPTlRSQUNUX0FMTCIsIk1FVEVSX01PRElGWSIsIkRFRkFVTFRfUkVOVF9QUklDRSIsIlJPTEVfQ1VTVE9NRVJfTUFTVEVSIiwiQlVJTERJTkdfRURJVCIsIkNPTlRSQUNUX1RFTVBMQVRFIiwiUFJPUEVSVFlfQ09OVFJBQ1QiLCJGSU5BTkNFX01PRElGWSIsIlVTRVJfTUFOQUdFUiIsIlBST1BFUlRZIiwiTUFSS0VUSU5HIiwiQ0hBTk5FTF9DT05UQUNUIiwiRklOQU5DRV9BUFBST1ZBTCIsIk1BUktFVElOR19TVEFUSVNUSUNTIiwiTUFSS0VUSU5HX1NZTkMiLCJERU1BTkRfSEFMTCIsIkNMSUVOVF9BTEwiXSwianRpIjoiMWJhOWJlNDMtMzcwYy00MTIzLTk4NjktMzE3ZWIwYTYxZGY0IiwiY2xpZW50X2lkIjoid2ViX2FwcCJ9.QXB9Rw-u3Sr67T0WRA7xnBEtsEZ5twf9l7PrbIpj1WLPL-CnIMfLXdjYEz9DKxj4gTO5YS7MbE22P24WquCU1KP7IpjxTE1rkZjUWVPv777JYBOYpR9wPKwFgPv1Czxux3wwz2M5qQSwmpNRm3AX9z5mBYWh-9hQnqaYcbcP8P4A-WSHEKIhtK9KS5NAiAsvwvdid34_P2_klxYe2RGtIlNXRle8RGw69oljG7JU_nTtbUve9pgD1frMxzLls9n_cH5BE0fezLHLPzGp2KMvn4FA9QBAOd4ETmyFxAglbcJCxJiGAUOCDvBOaa3cuL-eJL009WdqOygstF5dNd_fBA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CustomerID" elementType="Argument">
            <stringProp name="Argument.name">CustomerID</stringProp>
            <stringProp name="Argument.value">$%7Bid%7D</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RefreshToken" elementType="Argument">
            <stringProp name="Argument.name">RefreshToken</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJzb3ViYW50ZXN0QGNyZWFtcy5pbyIsInNjb3BlIjpbIkNyZWFtcy1XaGF0RnVja0NvZGVDYW5JR2l2ZUhlcmU_Il0sImF0aSI6ImVlMDIyN2QyLWE1ZDktNDBkMi05Zjg3LTBmNDJjMTc1NGMyMiIsImV4cCI6MTUxNzU4ODgxMywidXNlciI6eyJ1c2VySWQiOjU1LCJlbWFpbCI6InNvdWJhbnRlc3RAY3JlYW1zLmlvIiwiY3VzdG9tZXJJZCI6NSwidXNlck5hbWUiOiLlvKDkuIkiLCJ1c2VyVGVsIjoiMTgyNTgxMjE4ODEiLCJ3ZUNoYXROdW1iZXIiOiJ3ZXdld2VhMTExIiwicm9sZXMiOlsiQ1VTVE9NRVJfTUFTVEVSIl0sInRlbFZlcmlmaWVkIjp0cnVlLCJwYXNzd29yZFJlc2V0Ijp0cnVlLCJwZXJtaXNzaW9ucyI6WyJUQUdfTUFOQUdFUiIsIlBST1BFUlRZIiwiTUFSS0VUSU5HIiwiRklOQU5DRV9BUFBST1ZBTCIsIlRFTkFOVCIsIlBST1BFUlRZX0NPTlRSQUNUX1RFTVBMQVRFIiwiQ0hBTk5FTF9DT05UQUNUIiwiTUlDUk9fQk9PS19CVUlMRElORyIsIkNMSUVOVF9SRVBPUlQiLCJGSU5BTkNFX0FIRUFEX0lOVk9JQ0UiLCJURU5BTlRfVEFHX01BTkFHRVIiLCJDT05UUkFDVF9BUFBST1ZBTCIsIlBST1BFUlRZX0NPTlRSQUNUIiwiQ1VTVE9NX0JJTExfVFlQRSIsIlVTRVJfTUFOQUdFUiIsIkJVSUxESU5HX0VESVQiLCJDT05UUkFDVF9NT0RJRlkiLCJDT05UUkFDVCIsIlJPT01fRURJVCIsIkZJTkFOQ0VfQ1JFQVRFIiwiQ1VTVE9NX0lORFVTVFJZIiwiRklOQU5DRSIsIlJPT01fVEFHX01BTkFHRVIiLCJNQVJLRVRJTkdfU1RBVElTVElDUyIsIk1FVEVSX1JFQURJTkciLCJDVVNUT01fVEVSTUlOQVRJT05fUkVBU09OIiwiQ09OVFJBQ1RfVEVNUExBVEUiLCJDT05UUkFDVF9SRVBPUlRfRVhQT1JUIiwiTUVURVJfQklMTF9DUkVBVEUiLCJGSU5BTkNFX01PRElGWSIsIkRFRkFVTFRfUkVOVF9QUklDRSIsIk1FVEVSX01PRElGWSIsIkNPTlRSQUNUX0RFU0lHTkFURSJdLCJidWlsZGluZ0lkTGlzdCI6WzUxNiwxNzk2LDE3OTcsMjMxMCwxNTQ1LDMzMzcsMjMxNCwyMzE2LDIzMTcsMTcsMTgsMjU3OCwyMCwyMSwyMiwyMywyNTgzLDI0LDI2LDI3LDI4LDI5LDIwNzksMzIsMTgyNSwxMzIxLDIzNDgsMjM0OSwyODYyLDE1ODgsMjM1NiwxODQ4LDE4NDksMTg1NiwxODU3LDE4NTgsMTg2MSwxODY0LDE4NjksMTg3NSwyOTAwLDE2MjQsMjQwMCwxNjMzLDE4ODksMjY1NywyNDAzLDIxNDksMjQwNSwxODk0LDI0MDYsMjkxOCwyMTUxLDI0MDcsMTg5NiwxODk3LDE2NDIsMjQxMywyOTI5LDI5MzEsMTY1MiwxOTA5LDM0NDYsMzQ0NywxNjU2LDM0NDgsMzQ0OSwzNDUwLDE2NTksMzQ1MSwxOTIxLDI2OTQsMTY3OCwyMTkzLDI3MDUsNjU4LDI0NTIsOTIxLDE2MCwxNjEsMTYyLDE2MywxNjQsMTY1LDE2NiwxNjcsMTY4LDE2OSwxNzAsMTk2MiwxNzEsMTcwNywxNzIsMjIyMCwxNzMsMTk2NSwyNzMzLDE3NCwyMjIyLDE3NSwxNzEyLDE3MTMsMTc4LDE3OSwyNDgzLDE4MCwyNDg0LDE4MSwxMjA2LDE4MywxODQsMTIwOSwxNzM4LDIyNTcsMjc3MiwyMjYxLDQ3MCwyMjYyLDk4MywxNzUzLDIyNjUsMTc1NCwzMjkxLDE1MDgsMTUwOSwxNTEyLDE1MTQsMjI4MywxNTE2LDQ5MywyMjg1LDE1MTgsMTc3NSwxNzc3LDE1MjIsMTUyNCwxNTI1LDE3ODksMTc5MF0sImRhdGFBY2Nlc3NMZXZlbCI6eyJDT05UUkFDVCI6IkFMTCIsIlBST1BFUlRZX0NPTlRSQUNUIjoiQUxMIiwiQ0xJRU5UIjoiQUxMIn0sImFkbWluIjp0cnVlLCJkYXRhQXV0aExpc3QiOltdfSwiYXV0aG9yaXRpZXMiOlsiQ09OVFJBQ1RfQVBQUk9WQUwiLCJDT05UUkFDVF9ERVNJR05BVEUiLCJDT05UUkFDVF9SRVBPUlRfRVhQT1JUIiwiVEFHX01BTkFHRVIiLCJDT05UUkFDVF9BTEwiLCJDT05UUkFDVCIsIkNVU1RPTV9URVJNSU5BVElPTl9SRUFTT04iLCJDT05UUkFDVF9NT0RJRlkiLCJNRVRFUl9CSUxMX0NSRUFURSIsIkZJTkFOQ0UiLCJST09NX0VESVQiLCJGSU5BTkNFX0FIRUFEX0lOVk9JQ0UiLCJQUk9QRVJUWV9DT05UUkFDVF9URU1QTEFURSIsIk1FVEVSX1JFQURJTkciLCJQUk9QRVJUWV9DT05UUkFDVF9BTEwiLCJERUZBVUxUX1JFTlRfUFJJQ0UiLCJNRVRFUl9NT0RJRlkiLCJST0xFX0NVU1RPTUVSX01BU1RFUiIsIlJPT01fVEFHX01BTkFHRVIiLCJCVUlMRElOR19FRElUIiwiQ09OVFJBQ1RfVEVNUExBVEUiLCJQUk9QRVJUWV9DT05UUkFDVCIsIkZJTkFOQ0VfTU9ESUZZIiwiVVNFUl9NQU5BR0VSIiwiUFJPUEVSVFkiLCJURU5BTlRfVEFHX01BTkFHRVIiLCJNQVJLRVRJTkciLCJDSEFOTkVMX0NPTlRBQ1QiLCJGSU5BTkNFX0FQUFJPVkFMIiwiVEVOQU5UIiwiTUFSS0VUSU5HX1NUQVRJU1RJQ1MiLCJNSUNST19CT09LX0JVSUxESU5HIiwiQ1VTVE9NX0lORFVTVFJZIiwiQ1VTVE9NX0JJTExfVFlQRSIsIkZJTkFOQ0VfQ1JFQVRFIiwiQ0xJRU5UX1JFUE9SVCIsIkNMSUVOVF9BTEwiXSwianRpIjoiNGVmMGYxNDMtMDdjNC00ZGMxLTgzMTEtYmRlMWI3NjJjYTZhIiwiY2xpZW50X2lkIjoid2ViX2FwcCJ9.PPy00vNFL0Xi-dE3w88uIYZVsbuPmxAo8xH4uiY_GOHQBSZIOfvNAfqTjaokoYoYB1x9z9xNo1hnUDbZqd060U9RCWABAisH21cuLtK4Z8ki_YY8K2wyjupkQX4efu3MhHD645qM_OhXKUifQcZiyhjNolyc1CPYI7mnr4JglYYWCa_-DsNjbpq9KDfOkU2xcrSmT7y_0qII-s_gjNsiN509vHVsZV6f46a6b5Oo77McwRusiVPvAzH3m3hZyZB25mzcyODgq6hq8Rjyr-8APQZeQwCrdKb3da5ra4-ILLH7Jd7xTfs5mjEYmi9EOh0iPJbtsxm87PU54jH1g4_81g</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DomainURLbackup" elementType="Argument">
            <stringProp name="Argument.name">DomainURLbackup</stringProp>
            <stringProp name="Argument.value">staging-api.creams.io/web</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Non-Authorization Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">20</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">30</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517558940000</longProp>
        <longProp name="ThreadGroup.end_time">1517558940000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name"></stringProp>
              <stringProp name="Header.value"></stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Users login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientId&quot;: &quot;web_app&quot;,&#xd;
  &quot;password&quot;: &quot;Creams820&quot;,&#xd;
  &quot;username&quot;: &quot;1569279792@qq.com&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${DomainURL}</stringProp>
          <stringProp name="HTTPSampler.port">${PortNumber}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
